import contextlib
import copy
import ctypes
import io

import numpy as np
import xpress
from numpy.ctypeslib import ndpointer

import os
import sys

d = np.array([0.000000000000000000e+00, 7.514460000000000583e-02, 6.902079999999999327e-02, 6.976330000000000031e-02,
              6.699810000000000487e-02, 7.976310000000000344e-02, 7.011680000000000690e-02, 6.770539999999999892e-02,
              7.111860000000000404e-02, 5.558550000000000296e-02, 8.190920000000000145e-02, 6.407720000000000082e-02,
              7.514460000000000583e-02, 0.000000000000000000e+00, 2.254889999999999846e-03, 4.983220000000000011e-03,
              1.979430000000000078e-02, 2.882399999999999893e-02, 4.494669999999999915e-02, 4.584710000000000174e-02,
              4.495659999999999934e-02, 4.049490000000000034e-02, 6.525880000000000569e-02, 7.162280000000000035e-02,
              6.902079999999999327e-02, 2.254889999999999846e-03, 0.000000000000000000e+00, 5.957729999999999623e-03,
              1.941029999999999839e-02, 2.853349999999999984e-02, 4.602429999999999716e-02, 4.688889999999999725e-02,
              4.595060000000000117e-02, 4.307070000000000343e-02, 6.728119999999999934e-02, 7.298849999999999782e-02,
              6.976330000000000031e-02, 4.983220000000000011e-03, 5.957729999999999623e-03, 0.000000000000000000e+00,
              1.823839999999999836e-02, 2.845160000000000050e-02, 4.211100000000000260e-02, 4.263770000000000060e-02,
              4.275389999999999746e-02, 3.730920000000000070e-02, 6.378759999999999986e-02, 7.124410000000000465e-02,
              6.699810000000000487e-02, 1.979430000000000078e-02, 1.941029999999999839e-02, 1.823839999999999836e-02,
              0.000000000000000000e+00, 3.297579999999999956e-02, 4.616830000000000239e-02, 4.626040000000000013e-02,
              4.683070000000000288e-02, 4.383469999999999728e-02, 7.656490000000000518e-02, 7.541570000000000218e-02,
              7.976310000000000344e-02, 2.882399999999999893e-02, 2.853349999999999984e-02, 2.845160000000000050e-02,
              3.297579999999999956e-02, 0.000000000000000000e+00, 4.415809999999999874e-02, 4.351719999999999894e-02,
              4.557640000000000302e-02, 3.957519999999999788e-02, 6.671019999999999728e-02, 7.309190000000000131e-02,
              7.011680000000000690e-02, 4.494669999999999915e-02, 4.602429999999999716e-02, 4.211100000000000260e-02,
              4.616830000000000239e-02, 4.415809999999999874e-02, 0.000000000000000000e+00, 6.991350000000000342e-04,
              2.235319999999999842e-03, 4.630070000000000019e-03, 6.721249999999999447e-02, 7.916579999999999451e-02,
              6.770539999999999892e-02, 4.584710000000000174e-02, 4.688889999999999725e-02, 4.263770000000000060e-02,
              4.626040000000000013e-02, 4.351719999999999894e-02, 6.991350000000000342e-04, 0.000000000000000000e+00,
              1.822339999999999984e-03, 4.026280000000000137e-03, 6.751429999999999931e-02, 7.897360000000000491e-02,
              7.111860000000000404e-02, 4.495659999999999934e-02, 4.595060000000000117e-02, 4.275389999999999746e-02,
              4.683070000000000288e-02, 4.557640000000000302e-02, 2.235319999999999842e-03, 1.822339999999999984e-03,
              0.000000000000000000e+00, 3.567890000000000211e-03, 6.575050000000000339e-02, 7.840859999999999497e-02,
              5.558550000000000296e-02, 4.049490000000000034e-02, 4.307070000000000343e-02, 3.730920000000000070e-02,
              4.383469999999999728e-02, 3.957519999999999788e-02, 4.630070000000000019e-03, 4.026280000000000137e-03,
              3.567890000000000211e-03, 0.000000000000000000e+00, 6.644250000000000156e-02, 7.987569999999999393e-02,
              8.190920000000000145e-02, 6.525880000000000569e-02, 6.728119999999999934e-02, 6.378759999999999986e-02,
              7.656490000000000518e-02, 6.671019999999999728e-02, 6.721249999999999447e-02, 6.751429999999999931e-02,
              6.575050000000000339e-02, 6.644250000000000156e-02, 0.000000000000000000e+00, 7.972219999999999307e-02,
              6.407720000000000082e-02, 7.162280000000000035e-02, 7.298849999999999782e-02, 7.124410000000000465e-02,
              7.541570000000000218e-02, 7.309190000000000131e-02, 7.916579999999999451e-02, 7.897360000000000491e-02,
              7.840859999999999497e-02, 7.987569999999999393e-02, 7.972219999999999307e-02, 0.000000000000000000e+00
              ])



class HiddenPrints:
    def __enter__(self):
        self._original_stdout = sys.stdout
        sys.stdout = open(os.devnull, 'w')

    def __exit__(self, exc_type, exc_val, exc_tb):
        sys.stdout.close()
        sys.stdout = self._original_stdout


class InstanceCpp:

    def __init__(self):
        self.lib = ctypes.CDLL('7.9-PBMES/7.9-PBMES/MultiCoreCode/bridge.so')
        self.lib.run.argtypes = [ctypes.POINTER(ctypes.c_double), ctypes.c_int]
        self.lib.run.restype = ctypes.c_void_p

    def solve(self, d, n=None):
        if n==None:
            n = d.shape[0]



d = d.reshape(12, 12)
n = 8
d = copy.deepcopy(d[: n, :n])

i = InstanceCpp()
i.lib.run.restype = ndpointer(dtype=ctypes.c_int32, shape=(n, n))
Tau = i.lib.run(d.ctypes.data_as(ctypes.POINTER(ctypes.c_double)), d.shape[0])
print(Tau)
